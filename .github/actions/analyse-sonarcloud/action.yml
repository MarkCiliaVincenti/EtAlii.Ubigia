name: "SonarCloud analysis"
description: "Apply the SonarCloud analysis to the source code and unit tests"
inputs:
  configuration:
    description: 'The build configuration to use'
    required: true
  sonar_token:
    description: 'The SonarQube token to use'
    required: true
  github_token:
    description: 'The Github token to use'
    required: true
  solution:
    description: 'The solution that should be published'
    required: true
runs:
  using: composite
  steps:

    # Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.302

    # Versioning.
    - name: 'Versioning'
      uses: dotnet/nbgv@master
      id: nbgv

    # Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    # Build.
    - name: 'Build'
      shell: pwsh
      run: >
        dotnet build
        ${{ inputs.solution }}
        --configuration ${{ inputs.configuration }}
        /p:UbigiaIsRunningOnBuildAgent=true

    #    - name: Cache SonarCloud packages
#      uses: actions/cache@v1
#      with:
#        path: ~\sonar\cache
#        key: ${{ runner.os }}-sonar
#        restore-keys: ${{ runner.os }}-sonar

#    - name: Cache SonarCloud scanner
#      id: cache-sonar-scanner
#      uses: actions/cache@v1
#      with:
#        path: .\.sonar\scanner
#        key: ${{ runner.os }}-sonar-scanner
#        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
#      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner --version 5.1.0

      # Build and analyze.
    - name: Build and analyze
      env:
        UBIGIA_PROJECTNAME: EtAlii.Ubigia
        SONAR_COVERAGE_EXCLUSIONS: >
          **\*.Tests\**,
          **\Frameworks\HashLib\**,
          **\Frameworks\Moppet.Lappa\**
        GITHUB_TOKEN: ${{ inputs.github_token }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ inputs.sonar_token }}

      shell: pwsh
      run: |
        dotnet test --verbosity quiet ${{ inputs.solution }} --logger "trx;LogFileName=report.xunit.trx" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ env.UBIGIA_PROJECTNAME }}" /o:"vrenken" /d:sonar.login="${{ inputs.sonar_token }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**\coverage.opencover.xml" /v:"${{ steps.nbgv.outputs.SimpleVersion }}" /d:sonar.cs.vstest.reportsPaths="**\report.xunit.trx" /d:sonar.coverage.exclusions="${{ env.SONAR_COVERAGE_EXCLUSIONS }}"
        dotnet build ${{ inputs.solution }} --configuration ${{ inputs.configuration }}
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ inputs.sonar_token }}"
