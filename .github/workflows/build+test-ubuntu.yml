name: Build+test on Ubuntu

on:
  push:
    branches:
      - master
      - 'release/**'

  pull_request:
    branches: [ master ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true   # Stop wasting time caching packages
  DOTNET_CLI_TELEMETRY_OPTOUT: true         # Disable sending usage data to Microsoft
  CONFIGURATION: 'Debug-Ubuntu'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.200

      # Versioning.
    - name: Versioning
      uses: dotnet/nbgv@master
      id: nbgv

      # Restore, build and test.
    - name: Restore dependencies
      run: >
        dotnet restore
        ./Source/EtAlii.Ubigia.sln

    - name: Build
      run: >
        dotnet build
        ./Source/EtAlii.Ubigia.sln
        --configuration $CONFIGURATION
        --no-restore
        /p:UbigiaIsRunningOnBuildAgent=true


    - name: set pr build number (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3

      # set report file and title
    - name: Set Test Title
      run: |
        if ${{ github.event_name == 'pull_request' }}
        then
          echo "::set-env name=title::Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})"
          echo "::set-env name=file_name::TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md"
        else
          echo "::set-env name=title::Test Run ${{github.run_number}}"
          echo "::set-env name=file_name::TestReport.${{github.run_number}}.md"
        fi

    - name: Test
      run: >
        dotnet test
        --configuration $CONFIGURATION
        --no-build
        --verbosity normal
        --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
        ./Source/EtAlii.Ubigia.sln

      # upload report as build artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Test Run'
        path: ${{github.workspace}}/${{env.file_name}}

      # add report as PR comment (if PR)
    - name: comment PR
      uses: machine-learning-apps/pr-comment@master
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}
