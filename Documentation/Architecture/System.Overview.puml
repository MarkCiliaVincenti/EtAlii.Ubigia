@startuml
skinparam linetype ortho


node Client {
    component Application {
    }
    component Api {
        component Functional as ApiFunctional {
        }

        component CodeGeneration {
        }

        component Parsing {
        }

        hexagon Antlr {
        }
        hexagon Lappa {
        }

        Parsing --> Lappa
        Parsing --> Antlr

        ApiFunctional -> Parsing
        ApiFunctional -> CodeGeneration

        component ApiLogical {
        }

        component Traversal {
        }

        ApiLogical -> Traversal

        component ApiFabric {
        }

        ApiFabric -> Caching

        component Transport as ApiTransport {
        }

        component Caching {
        }

        hexagon gRPC as ApiGrpc {
        }
        hexagon Signalr as ApiSignalR {
        }
        hexagon REST as ApiRest {
        }

        ApiTransport --> ApiGrpc
        ApiTransport --> ApiSignalR
        ApiTransport --> ApiRest


        ApiFunctional --> ApiLogical
        ApiLogical --> ApiFabric
        ApiFabric --> ApiTransport
    }

    Application -> ApiFunctional
}

node Service {
    component "Infrastucture" as Infrastructure {

        component Transport as InfrastructureTransport {
        }

                hexagon gRPC as InfrastructureGrpc {
                }
                hexagon Signalr as InfrastructureSignalR {
                }
                hexagon REST as InfrastructureRest {
                }

                InfrastructureTransport --> InfrastructureGrpc
                InfrastructureTransport --> InfrastructureSignalR
                InfrastructureTransport --> InfrastructureRest


        component Functional as InfrastructureFunctional {
        }

        InfrastructureFunctional <-- InfrastructureTransport

        component Logical as InfrastructureLogical {
        }

        InfrastructureLogical <-- InfrastructureFunctional

        component Fabric as InfrastructureFabric {
        }

        component Persistence {
        }

        hexagon Ntfs {
        }
        hexagon InMemory {
        }
        hexagon Passthrough {
        }
        InfrastructureFabric -> Persistence
        Persistence --> Ntfs
        Persistence --> InMemory
        Persistence --> Passthrough


        InfrastructureFabric <-- InfrastructureLogical

    '    component Hosting {
    '    }
    '    component Storages
    '    component Spaces
    '    component Accounts
    '    component Roots
    '    component Entries
    '    component Content
    '
    '    Storages -- Spaces
    '    Spaces -- Accounts
    }
    component Hosting {
    }

    Hosting <-- Infrastructure

}


ApiTransport <-> InfrastructureTransport



@enduml
