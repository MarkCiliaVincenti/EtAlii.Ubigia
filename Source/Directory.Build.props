<!-- Stuff that needs to happen at the start of the MSBuild process should go in the .props file. -->
<Project>
  <PropertyGroup>
    <Version>$(PackageVersion)</Version>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Authors>Peter Vrenken</Authors>
    <Copyright>Copyright ©2012-2021 Peter Vrenken</Copyright>
    <Company>EtAlii</Company>
    <Product>Ubigia</Product>
    <PackageProjectUrl>https://github.com/vrenken/EtAlii.Ubigia</PackageProjectUrl>
    <RepositoryUrl>https://github.com/vrenken/EtAlii.Ubigia</RepositoryUrl>

    <!-- We need to maintain netstandard2.0 as netstandard2.1 is not compatbile with roslyn analyzers. -->
    <!-- https://github.com/dotnet/roslyn/issues/47087 -->
    <UbigiaLibraryTargetFramework>netstandard2.1</UbigiaLibraryTargetFramework>
    <UbigiaGrpcLibraryTargetFramework>netstandard2.1</UbigiaGrpcLibraryTargetFramework>
    <UbigiaPersistenceLibraryTargetFramework>netstandard2.1</UbigiaPersistenceLibraryTargetFramework>
    <UbigiaInfrastructureLibraryTargetFramework>netstandard2.1</UbigiaInfrastructureLibraryTargetFramework>
    <UbigiaApplicationTargetFramework>net7.0</UbigiaApplicationTargetFramework>
    <UbigiaTestApplicationTargetFramework>$(UbigiaApplicationTargetFramework)</UbigiaTestApplicationTargetFramework>

    <DefineConstants Condition="'$(UbigiaIsRunningOnBuildAgent)' == 'true'">$(DefineConstants);UBIGIA_IS_RUNNING_ON_BUILD_AGENT</DefineConstants>

    <UseLapaParsingInTests>false</UseLapaParsingInTests> <!-- Set to true to always use the legacy Lapa parsers instead of the Antlr4 ones. -->
    <DefineConstants Condition="'$(UseLapaParsingInTests)' == 'true'">$(DefineConstants);USE_LAPA_PARSING_IN_TESTS</DefineConstants>

    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>

    <LangVersion>10</LangVersion>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>

    <NoWarn>$(NoWarn);CA1822</NoWarn> <!-- [CA1822] Mark members as static, however as we aim to use as few static keywords as possible this is a false alarm. -->
    <NoWarn>$(NoWarn);AD0001</NoWarn> <!-- In SonarQube step of the build process: CSC : warning AD0001: Analyzer 'SonarAnalyzer.Rules.CSharp.CbdeHandlerRule' threw an exception of type 'SonarAnalyzer.CBDE.CbdeException' with message 'Top level error in CBDE handling -->


    <!-- We want to have comments on everything public -->
    <!--    <GenerateDocumentationFile>true</GenerateDocumentationFile>-->
    <!--    <MSBuildWarningsAsErrors>CS1591</MSBuildWarningsAsErrors>-->

  </PropertyGroup>

  <!-- Analysis, code conventions and standardization. -->
  <PropertyGroup>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors>true</WarningsAsErrors>
    <AnalysisLevel>5.0</AnalysisLevel>
  </PropertyGroup>

  <PropertyGroup>
    <!--<DefineConstants>$(DefineConstants);USE_ORIGINAL_CONTAINER</DefineConstants>-->   <!-- = original implementation. -->
    <DefineConstants>$(DefineConstants);USE_WRAPPER_CONTAINER</DefineConstants>           <!-- = wrapper around Microsoft.Extensions.DependencyInjection. -->
  </PropertyGroup>

  <ItemGroup>
<!--    <PackageReference Include="Meziantou.Analyzer" Version="1.0.612" >-->
<!--      <PrivateAssets>all</PrivateAssets>-->
<!--      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>-->
<!--    </PackageReference>-->
<!--    <PackageReference Include="SonarAnalyzer.CSharp" Version="8.14.0.22654">-->
<!--      <PrivateAssets>all</PrivateAssets>-->
<!--      <IncludeAssets>analyzers</IncludeAssets>-->
<!--    </PackageReference>-->
  </ItemGroup>

  <PropertyGroup>
    <IsPortalProject Condition="$(MSBuildProjectName.EndsWith('.Portal'))">true</IsPortalProject>
    <IsUbigiaTestProject Condition="$(MSBuildProjectName.EndsWith('.Tests')) OR $(MSBuildProjectName.EndsWith('.Tests.Docker')) OR $(MSBuildProjectName.EndsWith('.Tests.Local'))">true</IsUbigiaTestProject>
    <IsAnalyzerProject Condition="$(MSBuildProjectName.EndsWith('.Analyzers'))">true</IsAnalyzerProject>
    <IsUbigiaApplication>false</IsUbigiaApplication>
    <IsUbigiaLibrary>false</IsUbigiaLibrary>
  </PropertyGroup>

  <!-- The PropertyGroup below is used to configure all test projects. -->
  <PropertyGroup Condition="'$(IsUbigiaTestProject)' == 'true'">
    <TargetFramework>$(UbigiaTestApplicationTargetFramework)</TargetFramework>
    <Description>Unit test project</Description>
    <OutputType>Library</OutputType>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <!-- We don't want any of the hosting test projects to be packaged. -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('.Hostings.Tests.'))">
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <!-- We want any non-test project to use the pure nullable convention. -->
  <PropertyGroup Condition="'$(IsUbigiaTestProject)' != 'true'">
    <Nullable>disable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Patch for build error:  -->
    <!-- error NG0011: Some project references cannot be properly packaged. Please install the NuGetizer package on the following projects: C:\*\.nuget\packages\nerdbank.gitversioning\3.5.109\build\PrivateP2PCaching.proj. -->
    <!-- https://github.com/devlooped/nugetizer/issues/198 -->
    <NBGV_CacheMode>None</NBGV_CacheMode>
  </PropertyGroup>

</Project>

